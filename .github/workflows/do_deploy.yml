name: Deploy to DigitalOcean

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_NAME: axum_template
      APP_DISPLAY_NAME: Axum Template
      APP_PORT: 8080

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build --build-arg RUN_ID=${{ github.run_id }} -t $APP_NAME .
      
      - name: Save Docker Image
        run: docker save $APP_NAME -o $APP_NAME.tar

      - name: Upload to Digital Ocean
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DO_IP_ADDR }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_KEY }}
          source: "$APP_NAME.tar"
          target: "~/$APP_NAME"

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      - name: Deploy on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USERNAME }}@${{ secrets.DO_IP_ADDR }} << EOF
            docker load -i ~/$APP_NAME/$APP_NAME.tar
            rm ~/$APP_NAME/$APP_NAME.tar

            docker rm -f ${APP_NAME}_container || true
            docker container prune -f

            cd ~/$APP_NAME

            docker run -d \
                -p 8080:$APP_PORT \
                -v $(pwd)/database.db:/app/database.db \
                -v $(pwd)/ip_db.BIN:/app/ip_db.BIN \
                -v $(pwd)/.env:/app/.env \
                -e APP_VERSION=${{ github.run_id }} \
                -e APP_DISPLAY_NAME=${APP_DISPLAY_NAME} \
                -e APP_PORT=${APP_PORT} \
                -e APP_NAME=${APP_NAME} \
                --name ${APP_NAME}_container $APP_NAME

            docker system prune -a --volumes -f
          EOF